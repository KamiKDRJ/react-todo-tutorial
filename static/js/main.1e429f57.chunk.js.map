{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","target","marginTop","TodoItem","editing","setEditing","useEffect","console","log","todo","completed","id","viewMode","editMode","display","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","setUpdate","onKeyDown","event","key","TodosList","todos","map","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","path","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","width","height","text","link","activeClassName","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","exact","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e429f57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EAOBq\",\"checkbox\":\"TodoItem_checkbox__2ddqf\",\"textInput\":\"TodoItem_textInput__2AzL2\"};","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\n  \r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"6rem\", fontWeight: \"600\", marginBottom: \"2rem\", lineHeight: \"1em\", color: \"#eee\", textTransform: \"lowercase\", textAlign: \"center\" }}>todos</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n// import { IconContext } from \"react-icons\"\r\n\r\nconst InputTodo = props => {\r\n\tconst [inputText, setInputText] = useState({\r\n\t\ttitle: \"\",\r\n\t})\r\n\r\n\tconst onChange = e => {\r\n\t\tsetInputText({\r\n\t\t...inputText,\r\n\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tif (inputText.title.trim()) {\r\n\t\tprops.addTodoProps(inputText.title)\r\n\t\tsetInputText({\r\n\t\t\ttitle: \"\",\r\n\t\t})\r\n\t\t} else {\r\n\t\talert(\"Please write item\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className=\"form-container\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"input-text\"\r\n\t\t\t\tplaceholder=\"Add todo...\"\r\n\t\t\t\tvalue={inputText.title}\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<button className=\"input-submit\">\r\n\t\t\t\t<FaPlusCircle \r\n\t\t\t\t\tstyle={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\r\n\t\t\t\t/>\r\n\t\t\t</button>\r\n\r\n\r\n\t\t\t{/* Styling Multiple Icons at the same time */}\r\n\t\t\t{/* <IconContext.Provider value={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\"}} >\r\n\t\t\t\t<button className=\"input-submit\">\r\n\t\t\t\t\t<FaPlusCircle />\r\n\t\t\t\t\t<FaPlusCircle />\r\n\t\t\t\t\t<FaPlusCircle />\r\n\t\t\t\t</button>\r\n\t\t\t</IconContext.Provider> */}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect } from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\nconst TodoItem = (props) => {\r\n\tconst [editing, setEditing] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"cleaning\");\r\n\t}, [])\r\n\r\n\tconst handleEditing = () => {\r\n\t\tsetEditing(true);\r\n\t} \r\n\r\n\tconst handleUpdatedDone = (event) => {\r\n\t\tif (event.key === \"Enter\" ) {\r\n\t\t\tsetEditing(false);\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst completedStyle = {\r\n\tfontStyle: \"italic\",\r\n\tcolor: \"#595959\",\r\n\topacity: 0.4,\r\n\ttextDecoration: \"line-through\",\r\n\t}\r\n\r\n\tconst { completed, id, title } = props.todo\r\n\t\r\n\tlet viewMode = {};\r\n\tlet editMode = {};\r\n\r\n\tif (editing) { viewMode.display = 'none'; }\r\n\telse { editMode.display = 'none'; }\r\n\r\n\treturn (\r\n\t\t<li className={styles.item}>\r\n\t\t\t<div onDoubleClick={handleEditing} style={viewMode}>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\tclassName={styles.checkbox}\r\n\t\t\t\t\tchecked={completed}  \r\n\t\t\t\t\tonChange={() => props.handleChangeProps(id)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button onClick={() => props.deleteTodoProps(id)}>\r\n\t\t\t\t\t<FaTrash\r\n\t\t\t\t\t\tstyle={{color: \"orangered\", fontSize: \"16px\"}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<span style={completed ? completedStyle : null} >{title}</span>\r\n\t\t\t</div>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tstyle={editMode} \r\n\t\t\t\tclassName={styles.textInput} \r\n\t\t\t\tvalue={title} \r\n\t\t\t\tonChange={(e) => {props.setUpdate(e.target.value, id)}}\r\n\t\t\t\tonKeyDown={handleUpdatedDone}\r\n\t\t\t/>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = (props) => {\r\n    return (\r\n\t\t<ul>\r\n\t\t\t{props.todos.map(todo => (\r\n\t\t\t<TodoItem\r\n\t\t\t\tkey={todo.id}\r\n\t\t\t\ttodo={todo}\r\n\t\t\t\thandleChangeProps={props.handleChangeProps}\r\n\t\t\t\tdeleteTodoProps={props.deleteTodoProps}\r\n\t\t\t\tsetUpdate={props.setUpdate}\r\n\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\t\r\n}\r\n\r\nexport default TodosList","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SinglePage = () => {\r\n\tconst aboutData = [\r\n\t\t{\r\n\t\t  slug: \"about-app\",\r\n\t\t  title: \"About the App\",\r\n\t\t  description:\r\n\t\t\t\"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n\t\t},\r\n\t\t{\r\n\t\t  slug: \"about-author\",\r\n\t\t  title: \"About the Author\",\r\n\t\t  description:\r\n\t\t\t\"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n\t\t},\r\n\t]\r\n\r\n\tconst { slug } = useParams();\r\n\tconst aboutContent = aboutData.find(item => item.slug === slug);\r\n\tconst { title, description } = aboutContent;\r\n\r\n\treturn (\r\n\t\t<div className=\"main__content\">\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<p>{description}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SinglePage;","import React from \"react\";\r\nimport { useRouteMatch, Link, Route } from \"react-router-dom\";\r\nimport SinglePage from \"./SinglePage.js\"\r\n\r\nconst About = () => {\r\n\tconst { url, path } = useRouteMatch();\r\n\r\n\treturn (\r\n\t\t<div className=\"about__content\">\r\n\t\t\t<ul className=\"about__list\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`${url}/about-app`}>About App</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`${url}/about-author`}>About Author</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<Route path={`${path}/:slug`}>\r\n\t\t\t\t<SinglePage />\r\n\t\t\t</Route>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst NotMatch = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>No match for this page</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default NotMatch;","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MdClose } from \"react-icons/md\"\r\nimport { FiMenu } from \"react-icons/fi\"\r\n\r\nconst Navbar = () => {\r\n\tconst [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n\tconst links = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tpath: \"/\",\r\n\t\t\ttext: \"Home\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tpath: \"/about\",\r\n\t\t\ttext: \"About\",\r\n\t\t},\r\n\t]\r\n\r\n\tconst handleToggle = () => {\r\n\t\tsetNavbarOpen(!navbarOpen);\r\n\t}\r\n\r\n\tconst closeMenu = () => {\r\n\t\tsetNavbarOpen(false);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<nav className=\"navBar\">\r\n\t\t\t<button onClick={handleToggle}>\r\n\t\t\t\t{navbarOpen ? \r\n\t\t\t\t\t(<MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\"}} />)\r\n\t\t\t\t\t : \r\n\t\t\t\t\t(<FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\"}} />)\r\n\t\t\t\t}\r\n\t\t\t</button>\r\n\t\t\t<ul className={`menuNav ${navbarOpen ? \"showMenu\" : \"\"}`}>\r\n\t\t\t\t{links.map(link => {\r\n\t\t\t\t\treturn <li key={link.id}>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto={link.path}\r\n\t\t\t\t\t\t\tactiveClassName=\"active-link\"\r\n\t\t\t\t\t\t\tonClick={() => closeMenu()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{link.text}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nexport default Navbar","import React, { useState, useEffect } from \"react\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport TodosList from \"./TodosList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport About from \"../../pages/About\";\r\nimport NotMatch from \"../../pages/NotMatch\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n\r\nconst TodoContainer = () => {\r\n\tconst [todos, setTodos] = useState(getInitialTodos())\r\n\t\r\n\r\n\tfunction getInitialTodos() {\r\n\t\tconst temp = localStorage.getItem(\"todos\");\r\n\t\tconst savedTodos = JSON.parse(temp);\r\n\t\treturn savedTodos || [];\r\n\t}\r\n\t\r\n\t// useEffect(() => {\r\n\t// \tconsole.log(\"mount\");\r\n\r\n\t// \tconst temp = localStorage.getItem(\"todos\")\r\n\t// \tconst loadedTodos = JSON.parse(temp);\r\n\t// \tif (loadedTodos) { setTodos(loadedTodos) }\r\n\t// }, [setTodos])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst temp = JSON.stringify(todos);\r\n\t\tlocalStorage.setItem(\"todos\", temp);\r\n\t}, [todos])\r\n\r\n\tconst handleChange = id => {\r\n\t\tsetTodos(prevState =>\r\n\t\t\tprevState.map(todo => {     \r\n\t\t\t\tif (todo.id === id) {  \r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...todo, completed: !todo.completed\r\n\t\t\t\t\t}\r\n\t\t\t\t}      \r\n\t\t\t\treturn todo;    \r\n\t\t\t})  \r\n\t\t);\r\n\t};\r\n\r\n\r\n\tconst delTodo = id => {\r\n\t\tsetTodos([ \r\n\t\t\t...todos.filter(todo => {        \r\n\t\t\treturn todo.id !== id;      \r\n\t\t\t}),\r\n\t\t]);\r\n\t};\r\n\r\n\tconst addTodoItem = title => {\r\n\t\tconst newTodo = {    \r\n\t\t\tid: uuidv4(),    \r\n\t\t\ttitle: title,    \r\n\t\t\tcompleted: false  \r\n\t\t};  \r\n\t\tsetTodos([...todos, newTodo]);\r\n\t};\r\n\r\n\t\r\n\tconst setUpdate = (updatedTitle, id) => {\r\n\t\tsetTodos(\r\n\t\t\ttodos.map(todo => {\r\n\t\t\t\tif(todo.id === id) {\r\n\t\t\t\t\ttodo.title = updatedTitle\r\n\t\t\t\t}\r\n\t\t\t\treturn todo\r\n\t\t\t}),\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<InputTodo addTodoProps={addTodoItem} />\r\n\t\t\t\t\t\t<TodosList \r\n\t\t\t\t\t\t\ttodos={todos} \r\n\t\t\t\t\t\t\thandleChangeProps={handleChange} \r\n\t\t\t\t\t\t\tdeleteTodoProps={delTodo}\r\n\t\t\t\t\t\t\tsetUpdate ={setUpdate} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t<About />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t<NotMatch />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n//component file\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n// import { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\n\r\n//stylesheet\r\nimport \"./functionBased/App.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t<BrowserRouter>\r\n    \t<TodoContainer />\r\n\t</BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}